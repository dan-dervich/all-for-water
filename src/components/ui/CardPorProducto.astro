---
const { imgSrc } = Astro.props;
const { text } = Astro.props;
const { desc } = Astro.props;
const { id } = Astro.props;
const { mini_desc } = Astro.props;
const { search_text } = Astro.props;
let index = 0;
let isFirstRow = true;
let editedDesc = desc;
if (/<table/.test(desc)) {
  editedDesc = editedDesc
    .replace(
      "<thead>",
      '<thead class="bg-gray-200 border border-gray-300 border-t-1 border-l-1 border-r-1">',
    )
    .replace("<table", '<table class="text-center w-full"')
    .replace(
      /<td/g,
      '<td class="border border-gray-300 border-t-1 border-l-1 border-r-1"',
    )
    .replace(
      /<td/g,
      '<td class="border border-gray-300 border-t-1 border-l-1 border-r-1"',
    )
    .replace("style", "")
    .replace(/style="[^"]*"/g, "")
    .replace("<ul", '<ul class="list-disc list-inside ml-5"')
    .replace(/<li[^>]*>/g, '<li class="mb-2">') // Agrega margen entre elementos de lista
    .replace(/<p>/g, '<p class="mb-4">') // Agrega margen entre p√°rrafos y listas
    .replace(/&rdquo;/g, '"') // Corrige comillas en el contenido
    .replace(/&ldquo;/g, '"');
}
editedDesc = editedDesc?.replace(/<p>/g, "<p>");
editedDesc = `<div class="flex justify-stretch items-stretch text-start flex-col w-full overflow-auto p-4 text-gray-800 font-medium leading-relaxed gap-5">${editedDesc}</div>`;
const urlNombre = text.replace(/[ /.,%]/g, "-").toLowerCase();
---

<a
  href={`/product/${urlNombre}/`}
  id={id}
  data-search-value={search_text}
  class="p-2
  transition-all
  ease-linear
  duration-150
  hover:bg-[#99d1eb]
  bg-[#cce9f6]
  shadow-xl
  shadow-violeta/40
  flex
  flex-col
  items-center
  justify-center
  rounded-xl
  h-auto
  w-11/12
  sm:max-w-96
  m-5
  border
  border-[#99d1eb]
  border-t-4
  border-l-4
  border-r-4
  border-b-4"
>
  <!-- class="h-auto w-11/12 sm:max-w-96 max-w-52 m-5" -->
  <!-- class="shadow-xl shadow-violeta/40 flex flex-col items-center justify-center rounded-xl w-screen h-auto" -->
  <img
    src={imgSrc !== "/path-to-placeholder-image.png" ? imgSrc : ""}
    style={imgSrc === "/path-to-placeholder-image.png"
      ? "display: none;"
      : "display: auto"}
    alt={desc}
    class="rounded-xl overflow-x-hidden max-w-94 max-h-96 m-5"
    loading="eager"
  />
  <h2
    class="overflow-x-hidden text-[#222] text-xl font-bold text-wrap text-center"
  >
    {text}
  </h2>
  {
    mini_desc ? (
      <p class="w-full text-center overflow-auto" set:html={mini_desc} />
    ) : (
      ""
    )
  }
</a>
